{
	"name": "shootout-dataflow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "fifa_data_input",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "shootout_dataset",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "filter1"
				},
				{
					"name": "aggregate1"
				},
				{
					"name": "filter2"
				},
				{
					"name": "aggregate2"
				},
				{
					"name": "join1"
				},
				{
					"name": "select1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          date as string,",
				"          home_team as string,",
				"          away_team as string,",
				"          home_team_continent as string,",
				"          away_team_continent as string,",
				"          home_team_fifa_rank as string,",
				"          away_team_fifa_rank as string,",
				"          home_team_total_fifa_points as string,",
				"          away_team_total_fifa_points as string,",
				"          home_team_score as string,",
				"          away_team_score as string,",
				"          tournament as string,",
				"          city as string,",
				"          country as string,",
				"          neutral_location as string,",
				"          shoot_out as string,",
				"          home_team_result as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source1 filter(shoot_out == \"Yes\") ~> filter1",
				"filter1 aggregate(groupBy(home_team),",
				"     total_win = count(home_team)) ~> aggregate1",
				"source1 filter(shoot_out == \"Yes\") ~> filter2",
				"filter2 aggregate(groupBy(home_team),",
				"     total_lose = count(home_team)) ~> aggregate2",
				"aggregate1, aggregate2 join(aggregate1@home_team == aggregate2@home_team,",
				"     joinType:'outer',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1 select(mapColumn(",
				"          home_team = aggregate1@home_team,",
				"          total_win,",
				"          home_team = aggregate2@home_team,",
				"          total_lose",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          date as string,",
				"          home_team as string,",
				"          away_team as string,",
				"          home_team_continent as string,",
				"          away_team_continent as string,",
				"          home_team_fifa_rank as string,",
				"          away_team_fifa_rank as string,",
				"          home_team_total_fifa_points as string,",
				"          away_team_total_fifa_points as string,",
				"          home_team_score as string,",
				"          away_team_score as string,",
				"          tournament as string,",
				"          city as string,",
				"          country as string,",
				"          neutral_location as string,",
				"          shoot_out as string,",
				"          home_team_result as string",
				"     ),",
				"     partitionFileNames:['shootout_match.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sink1"
			]
		}
	}
}