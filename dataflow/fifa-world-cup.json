{
	"name": "fifa-world-cup",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "fifa_data_input",
						"type": "DatasetReference"
					},
					"name": "fifaworldcupinput"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "output",
						"type": "DatasetReference"
					},
					"name": "output",
					"rejectedDataLinkedService": {
						"referenceName": "kundan_storage_adf_linked_services",
						"type": "LinkedServiceReference"
					}
				}
			],
			"transformations": [
				{
					"name": "homewin"
				},
				{
					"name": "homewinfilter",
					"description": "Add expression for the filter"
				},
				{
					"name": "homelosefilter"
				},
				{
					"name": "homedrawfilter"
				},
				{
					"name": "homelose"
				},
				{
					"name": "homedraw"
				},
				{
					"name": "join1"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "select1"
				},
				{
					"name": "join2"
				},
				{
					"name": "derivedColumn2"
				}
			],
			"scriptLines": [
				"source(output(",
				"          date as string,",
				"          home_team as string,",
				"          away_team as string,",
				"          home_team_continent as string,",
				"          away_team_continent as string,",
				"          home_team_fifa_rank as string,",
				"          away_team_fifa_rank as string,",
				"          home_team_total_fifa_points as string,",
				"          away_team_total_fifa_points as string,",
				"          home_team_score as string,",
				"          away_team_score as string,",
				"          tournament as string,",
				"          city as string,",
				"          country as string,",
				"          neutral_location as string,",
				"          shoot_out as string,",
				"          home_team_result as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     limit: 24000,",
				"     ignoreNoFilesFound: false) ~> fifaworldcupinput",
				"homewinfilter aggregate(groupBy(home_team),",
				"     total_win = count(home_team)) ~> homewin",
				"fifaworldcupinput filter(home_team_result==\"Win\") ~> homewinfilter",
				"fifaworldcupinput filter(home_team_result==\"Lose\") ~> homelosefilter",
				"fifaworldcupinput filter(home_team_result==\"Draw\") ~> homedrawfilter",
				"homelosefilter aggregate(groupBy(home_team),",
				"     total_lose = count(home_team_result)) ~> homelose",
				"homedrawfilter aggregate(groupBy(home_team),",
				"     total_draw = count(home_team_result)) ~> homedraw",
				"homedraw, homelose join(homedraw@home_team == homelose@home_team,",
				"     joinType:'outer',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1 derive(home_team = iif(isNull(homedraw@home_team), homelose@home_team, homedraw@home_team)) ~> derivedColumn1",
				"derivedColumn1 select(mapColumn(",
				"          home_team,",
				"          total_lose,",
				"          total_draw",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1, homewin join(select1@home_team == homewin@home_team,",
				"     joinType:'outer',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join2",
				"join2 derive(home_team = iif(isNull(select1@home_team), homewin@home_team, select1@home_team)) ~> derivedColumn2",
				"derivedColumn2 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          date as string,",
				"          home_team as string,",
				"          away_team as string,",
				"          home_team_continent as string,",
				"          away_team_continent as string,",
				"          home_team_fifa_rank as string,",
				"          away_team_fifa_rank as string,",
				"          home_team_total_fifa_points as string,",
				"          away_team_total_fifa_points as string,",
				"          home_team_score as string,",
				"          away_team_score as string,",
				"          tournament as string,",
				"          city as string,",
				"          country as string,",
				"          neutral_location as string,",
				"          shoot_out as string,",
				"          home_team_result as string",
				"     ),",
				"     partitionFileNames:['team_output.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> output"
			]
		}
	}
}