{
	"name": "team-wise-rank",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "fifa_data_input",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "aggregate1"
				},
				{
					"name": "select1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          date as string,",
				"          home_team as string,",
				"          away_team as string,",
				"          home_team_continent as string,",
				"          away_team_continent as string,",
				"          home_team_fifa_rank as string,",
				"          away_team_fifa_rank as string,",
				"          home_team_total_fifa_points as string,",
				"          away_team_total_fifa_points as string,",
				"          home_team_score as string,",
				"          away_team_score as string,",
				"          tournament as string,",
				"          city as string,",
				"          country as string,",
				"          neutral_location as string,",
				"          shoot_out as string,",
				"          home_team_result as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     limit: 25000,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source1 aggregate(groupBy(home_team),",
				"     total_match = count(home_team)) ~> aggregate1",
				"aggregate1 select(mapColumn(",
				"          home_team",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 sink(validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     keys:['home_team'],",
				"     store: 'cache',",
				"     format: 'inline',",
				"     output: false,",
				"     saveOrder: 1,",
				"     partitionBy('hash', 1)) ~> sink1"
			]
		}
	}
}